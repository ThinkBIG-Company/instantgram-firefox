{"version":3,"file":"main.js","mappings":"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","sources":["webpack://instantgram-light/webpack/bootstrap","webpack://instantgram-light/webpack/runtime/define property getters","webpack://instantgram-light/webpack/runtime/hasOwnProperty shorthand","webpack://instantgram-light/./src/model/mediaType.ts","webpack://instantgram-light/./src/localization.ts","webpack://instantgram-light/./src/helpers/localize.ts","webpack://instantgram-light/./src/helpers/utils.ts","webpack://instantgram-light/./src/modules/FeedScanner.ts","webpack://instantgram-light/./src/modules/PostReelScanner.ts","webpack://instantgram-light/./src/modules/ReelsScanner.ts","webpack://instantgram-light/./src/modules/StoriesScanner.ts","webpack://instantgram-light/./src/modules/MediaScanner.ts","webpack://instantgram-light/./src/components/Interconnect.ts","webpack://instantgram-light/./src/components/Modal.ts","webpack://instantgram-light/./node_modules/detect-browser/es/index.js","webpack://instantgram-light/./src/modules/Update.ts","webpack://instantgram-light/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export enum MediaType {\r\n  Ad = \"AD\",\r\n  Image = \"IMAGE\",\r\n  Video = \"VIDEO\",\r\n  Carousel = \"CAROUSEL\",\r\n  UNDEFINED = \"UNDEFINED\",\r\n}","export default {\r\n    'langs': {\r\n        'en-US': {\r\n            'helpers.localize_defaultlang': '[instantgram-light] set language: ${LANG_DEFAULT} \\n For more information about available languages please check http://thinkbig-company.github.io/instantgram',\r\n\r\n            'index@alert_onlyWorks': 'Works only on instagram.com',\r\n            'index@profilepage_downloader_disabled': 'Sorry the ProfilePage downloader is currently disabled because instagram changed their system.\\n\\nMaybe in the future there will be a solution to fix the problem.',\r\n\r\n            'index@alert_dontFound': 'Did you open any Instagram post? Like for example<br/><div style=\"text-align:center\"><a style=\"color:black\" href=\"https://www.instagram.com/p/CIGrv1VMBkS/\" target=\"_blank\">https://www.instagram.com/p/CIGrv1VMBkS/</a></div>',\r\n\r\n            'index#program#modal_settings@title': 'Settings',\r\n            'index#program#modal_settings@settings_attention': 'Attention: You have to open [instantgram-light] again for your changes to be active!',\r\n            'index#program#modal_settings@settings_1': 'Enable monetized posts<br>(ad blockers must be disabled)',\r\n            'index#program#modal_settings@settings_2': 'Stories pause when opening [instantgram-light]',\r\n            'index#program#modal_settings@settings_3': 'Open download in new tab',\r\n            'index#program#modal_settings@settings_4': 'Change the file name format for downloads.<br/>The default format is as follows.',\r\n            'index#program#modal_settings@settings_4_1': 'You can omit the above placeholders completely or customize them by adding hyphens, underscores, and periods.',\r\n\r\n            'index@download': 'Download',\r\n            'index@save': 'Save',\r\n            'index@saved': 'Saved',\r\n            'index@close': 'Close',\r\n\r\n            'modules.update@consoleWarnOutdatedInfo': '[instantgram-light] is outdated. Please check http://thinkbig-company.github.io/instantgram for available updates.',\r\n            'modules.update@consoleWarnOutdatedInfoVersions': '[instantgram-light] Installed version: ${data.version} | New update: ${data.onlineVersion}',\r\n            'modules.update@determineIfGetUpdateIsNecessary_contacting': '[instantgram-light] is looking for available updates...',\r\n            'modules.update@determineIfGetUpdateIsNecessary_updated': '[instantgram-light] updated your current version.',\r\n            'modules.update@determineIfGetUpdateIsNecessary_@update_available': 'There is a new update available',\r\n            'modules.update@determineIfGetUpdateIsNecessary_@load_update': 'Get update'\r\n        },\r\n        'es-AR': {\r\n            'helpers.localize_defaultlang': '[instantgram-light] establecer idioma: ${LANG_DEFAULT} \\n Para más información sobre los idiomas disponibles, consulte http://thinkbig-company.github.io/instantgram',\r\n\r\n            'index@alert_onlyWorks': 'Sólo funciona en instagram.com',\r\n            'index@profilepage_downloader_disabled': 'Lo siento, la descarga de ProfilePage está deshabilitada actualmente porque Instagram cambió su sistema.\\n\\nTal vez en el futuro haya una solución para solucionar el problema.',\r\n\r\n            'index@alert_dontFound': '¿Has abierto algún post de Instagram? Como por ejemplo<br/><div style=\"text-align:center\"><a style=\"color:black\" href=\"https://www.instagram.com/p/CIGrv1VMBkS/\" target=\"_blank\">https://www.instagram.com/p/CIGrv1VMBkS/</a></div>',\r\n\r\n            'index#program#modal_settings@title': 'Ajustes',\r\n            'index#program#modal_settings@settings_attention': 'Atención: ¡Tienes que abrir [instantgram-light] nuevamente para que los cambios estén activos!',\r\n            'index#program#modal_settings@settings_1': 'Habilitar publicaciones monetizadas<br>(los bloqueadores de anuncios deben estar deshabilitados)',\r\n            'index#program#modal_settings@settings_2': 'Historias en pausa al abrir [instantgram-light]',\r\n            'index#program#modal_settings@settings_3': 'Abrir la descarga en una nueva pestaña',\r\n            'index#program#modal_settings@settings_4': 'Cambie el formato del nombre de archivo para las descargas.<br/>El formato predeterminado es el siguiente',\r\n            'index#program#modal_settings@settings_4_1': 'Puede omitir por completo los marcadores de posición anteriores o personalizarlos agregando guiones, guiones bajos y puntos.',\r\n\r\n            'index@download': 'Descargar',\r\n            'index@save': 'Ahorrar',\r\n            'index@saved': 'Salvado',\r\n            'index@close': 'Cerca',\r\n\r\n            'modules.update@consoleWarnOutdatedInfo': '[instantgram-light] es obsoleto. Consulte en http://thinkbig-company.github.io/instantgram las actualizaciones disponibles.',\r\n            'modules.update@consoleWarnOutdatedInfoVersions': '[instantgram-light] Versión instalada: ${data.version} | Nueva actualización: ${data.onlineVersion}',\r\n            'modules.update@determineIfGetUpdateIsNecessary_contacting': '[instantgram-light] está buscando actualizaciones disponibles...',\r\n            'modules.update@determineIfGetUpdateIsNecessary_updated': '[instantgram-light] ha actualizado su versión actual.',\r\n            'modules.update@determineIfGetUpdateIsNecessary_@update_available': 'Hay una nueva actualización disponible',\r\n            'modules.update@determineIfGetUpdateIsNecessary_@load_update': 'Obtener información'\r\n        },\r\n        'de-DE': {\r\n            'helpers.localize_defaultlang': 'Ausgewählte Sprache: ${LANG_DEFAULT} \\n Weitere Informationen zu den unterstützten Sprachen findest du auf http://thinkbig-company.github.io/instantgram',\r\n\r\n            'index@alert_onlyWorks': 'Funktioniert nur auf instagram.com',\r\n            'index@profilepage_downloader_disabled': 'Leider ist der ProfilePage-Downloader derzeit deaktiviert, da Instagram sein System geändert hat.\\n\\nVielleicht gibt es in Zukunft eine Lösung für dieses Problem.',\r\n\r\n            'index@alert_dontFound': 'Hast du einen Instagram Post geöffnet? Zum Beispiel<br/><div style=\"text-align:center\"><a style=\"color:black\" href=\"https://www.instagram.com/p/CIGrv1VMBkS/\" target=\"_blank\">https://www.instagram.com/p/CIGrv1VMBkS/</a></div>',\r\n\r\n            'index#program#modal_settings@title': 'Einstellungen',\r\n            'index#program#modal_settings@settings_attention': 'Achtung: Sie müssen [instantgram-light] erneut öffnen, damit ihre Änderungen aktiv sind!',\r\n            'index#program#modal_settings@settings_1': 'Monetarisierte Beiträge aktivieren<br>(Werbeblocker müssen deaktiviert sein)',\r\n            'index#program#modal_settings@settings_2': 'Stories pausieren beim öffnen von [instantgram-light]',\r\n            'index#program#modal_settings@settings_3': 'Download in neuem Tab öffnen',\r\n            'index#program#modal_settings@settings_4': 'Ändern Sie das Dateinamenformat für Downloads.<br/>Das Standardformat ist wie folgt',\r\n            'index#program#modal_settings@settings_4_1': 'Sie können die obigen Platzhalter komplett weglassen oder sie durch Hinzufügen von Bindestrichen, Unterstrichen und Punkten anpassen.',\r\n\r\n            'index@download': 'Herunterladen',\r\n            'index@save': 'Speichern',\r\n            'index@saved': 'Gespeichert',\r\n            'index@close': 'Schließen',\r\n\r\n            'modules.update@consoleWarnOutdatedInfo': '[instantgram-light] ist veraltet. Bitte besuche die Seite http://thinkbig-company.github.io/instantgram für ein Update.',\r\n            'modules.update@consoleWarnOutdatedInfoVersions': '[instantgram-light] Installierte Version: ${data.version} | Neue Version: ${data.onlineVersion}',\r\n            'modules.update@determineIfGetUpdateIsNecessary_contacting': '[instantgram-light] sucht nach neuen verfügbaren Updates...',\r\n            'modules.update@determineIfGetUpdateIsNecessary_updated': '[instantgram-light] wurde aktualisiert.',\r\n            'modules.update@determineIfGetUpdateIsNecessary_@update_available': 'Es ist ein neues Update verfügbar',\r\n            'modules.update@determineIfGetUpdateIsNecessary_@load_update': 'Update laden'\r\n        },\r\n        'pt-BR': {\r\n            'helpers.localize_defaultlang': '[instantgram-light] idioma configurado: ${LANG_DEFAULT} \\npara mais informações sobre os idiomas suportados, acesse http://thinkbig-company.github.io/instantgram',\r\n\r\n            'index@alert_onlyWorks': '[instantgram-light] somente funciona no instagram.com',\r\n            'index@profilepage_downloader_disabled': 'Lamentamos que o programa de download ProfilePage esteja atualmente desativado porque o programa mudou seu sistema.\\n\\nTalvez, no futuro, haja uma solução para resolver o problema.',\r\n\r\n            'index@alert_dontFound': 'ops, você está em algum post do instagram? ex:<br/><div style=\"text-align:center\"><a style=\"color:black\" href=\"https://www.instagram.com/p/CIGrv1VMBkS/\" target=\"_blank\">https://www.instagram.com/p/CIGrv1VMBkS/</a></div>',\r\n\r\n            'index#program#modal_settings@title': 'Configurações',\r\n            'index#program#modal_settings@settings_attention': 'Atenção: Você precisa abrir o [instantgram-light] novamente para que suas alterações sejam ativadas!',\r\n            'index#program#modal_settings@settings_1': 'Habilitar postagens monetizadas<br>(os bloqueadores de anúncios devem estar desativados)',\r\n            'index#program#modal_settings@settings_2': 'As histórias fazem uma pausa ao abrir [instantgram-light]',\r\n            'index#program#modal_settings@settings_3': 'Abrir o download em uma nova guia',\r\n            'index#program#modal_settings@settings_4': 'Altere o formato do nome do arquivo para downloads.<br/>O formato padrão é o seguinte',\r\n            'index#program#modal_settings@settings_4_1': 'Você pode omitir completamente os espaços reservados acima ou ajustá-los adicionando hífens, sublinhados e pontos.',\r\n\r\n            'index@download': 'Download',\r\n            'index@save': 'Salvar',\r\n            'index@saved': 'Salvo em',\r\n            'index@close': 'Fechar',\r\n\r\n            'modules.update@consoleWarnOutdatedInfo': '[instantgram-light] está desatualizado. Acesse http://thinkbig-company.github.io/instantgram para atualizar',\r\n            'modules.update@consoleWarnOutdatedInfoVersions': '[instantgram-light] versão local: ${data.version} | nova versão: ${data.onlineVersion}',\r\n            'modules.update@determineIfGetUpdateIsNecessary_contacting': '[instantgram-light] está procurando atualizações...',\r\n            'modules.update@determineIfGetUpdateIsNecessary_updated': '[instantgram-light] informações locais atualizadas',\r\n            'modules.update@determineIfGetUpdateIsNecessary_@update_available': 'Há uma nova atualização disponível',\r\n            'modules.update@determineIfGetUpdateIsNecessary_@load_update': 'Carga de actualização'\r\n        }\r\n    }\r\n}","import { program } from \"..\"\r\nimport localization from \"../localization\"\r\n\r\nlet shortLang = navigator.language\r\nif (shortLang.indexOf('-') !== -1) {\r\n    shortLang = shortLang.split('-')[0]\r\n}\r\nif (shortLang.indexOf('_') !== -1) {\r\n    shortLang = shortLang.split('_')[0]\r\n}\r\n\r\nconst LANGS_NORMALIZE = {\r\n    'de': 'de-DE',\r\n    'en': 'en-US',\r\n    'es': 'es-AR',\r\n    'pt': 'pt-BR'\r\n}\r\n\r\nconst LANG_DEFAULT = LANGS_NORMALIZE[shortLang]\r\n\r\n/**\r\n * @name: localize! function to return localized strings in localization\r\n * @param: str {string} [required] str of language\r\n * @param: lang {string} [default navigator language]\r\n * @return str in language selected\r\n *\r\n */\r\nfunction localize(str: string, lang: string = LANG_DEFAULT): string {\r\n    try {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (!localization.langs.hasOwnProperty(lang)) {\r\n            lang = 'en-US' // default lang\r\n        }\r\n        if (localization.langs[lang][str]) {\r\n            return localization.langs[lang][str]\r\n        }\r\n\r\n        return ''\r\n    } catch (e) {\r\n        console.error(`[${program.NAME}]LOC error:`, e)\r\n        return `ops, an error ocurred in localization system. Enter in https://github.com/ThinkBIG-Company/${program.NAME}/issues/new and open an issue with this code: 'LOC_dont_found_str_neither_default:[${lang}->${str}]'\r\n    for more information open the console`\r\n    }\r\n}\r\n\r\nconsole.info(localize('helpers.localize_defaultlang').replace('${LANG_DEFAULT}', LANG_DEFAULT))\r\n\r\nexport default localize","import { Program } from \"../App\"\r\nimport { MediaType } from \"../model/mediaType\"\r\nimport localize from \"./localize\"\r\n\r\nconst mediaInfoCache: Map<string, any> = new Map() // key: media id, value: info json\r\nconst mediaIdCache: Map<string, string> = new Map() // key: post id, value: media id\r\n\r\nasync function fetchVideoURL(articleNode: HTMLElement, videoElem: HTMLVideoElement) {\r\n    const poster = videoElem.getAttribute(\"poster\")\r\n    const timeNodes = articleNode.querySelectorAll(\"time\")\r\n    const posterUrl = (timeNodes[timeNodes.length - 1].parentNode!.parentNode as any).href\r\n    const posterPattern = /\\/([^\\/?]*)\\?/\r\n    const posterMatch = poster?.match(posterPattern)\r\n    const postFileName = posterMatch?.[1]\r\n    const resp = await fetch(posterUrl)\r\n    const content = await resp.text()\r\n    const pattern = new RegExp(`${postFileName}.*?video_versions.*?url\":(\"[^\"]*\")`, \"s\")\r\n    const match = content.match(pattern)\r\n    let videoUrl = JSON.parse(match?.[1] ?? \"\")\r\n    videoUrl = videoUrl.replace(/^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/?\\n]+)/g, \"https://scontent.cdninstagram.com\")\r\n    videoElem.setAttribute(\"videoURL\", videoUrl)\r\n    return videoUrl\r\n}\r\n\r\nconst findAppId = () => {\r\n    const appIdPattern = /\"X-IG-App-ID\":\"([\\d]+)\"/\r\n    const bodyScripts: NodeListOf<HTMLScriptElement> = document.querySelectorAll(\"body > script\")\r\n    for (let i = 0; i < bodyScripts.length; ++i) {\r\n        const match = bodyScripts[i].text.match(appIdPattern)\r\n        if (match) return match[1]\r\n    }\r\n    return null\r\n}\r\n\r\nfunction findPostId(articleNode: HTMLElement) {\r\n    const pathname = window.location.pathname\r\n    if (pathname.startsWith(\"/reels/\")) {\r\n        return pathname.split(\"/\")[2]\r\n    } else if (pathname.startsWith(\"/stories/\")) {\r\n        return pathname.split(\"/\")[3]\r\n    } else if (pathname.startsWith(\"/reel/\")) {\r\n        return pathname.split(\"/\")[2]\r\n    }\r\n    const postIdPattern = /^\\/p\\/([^/]+)\\//\r\n    const aNodes = articleNode.querySelectorAll(\"a\")\r\n    for (let i = 0; i < aNodes.length; ++i) {\r\n        const link = aNodes[i].getAttribute(\"href\")\r\n        if (link) {\r\n            const match = link.match(postIdPattern)\r\n            if (match) return match[1]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nconst findMediaId = async (postId: string) => {\r\n    const mediaIdPattern = /instagram:\\/\\/media\\?id=(\\d+)|[\"' ]media_id[\"' ]:[\"' ](\\d+)[\"' ]/\r\n    const match = window.location.href.match(/www.instagram.com\\/stories\\/[^\\/]+\\/(\\d+)/)\r\n    if (match) return match[1]\r\n    if (!mediaIdCache.has(postId)) {\r\n        const postUrl = `https://www.instagram.com/p/${postId}/`\r\n        const resp = await fetch(postUrl)\r\n        const text = await resp.text()\r\n        const idMatch = text.match(mediaIdPattern)\r\n        if (!idMatch) return null\r\n        let mediaId = null\r\n        for (let i = 0; i < idMatch.length; ++i) {\r\n            if (idMatch[i]) mediaId = idMatch[i]\r\n        }\r\n        if (!mediaId) return null\r\n        mediaIdCache.set(postId, mediaId)\r\n    }\r\n    return mediaIdCache.get(postId)\r\n}\r\n\r\nconst getImgOrVedioUrl = (item: Record<string, any>) => {\r\n    if (\"video_versions\" in item) {\r\n        return item.video_versions[0].url\r\n    } else {\r\n        return item.image_versions2.candidates[0].url\r\n    }\r\n}\r\n\r\nconst getVideoSrc = async (articleNode: HTMLElement, videoElem: HTMLVideoElement) => {\r\n    let url = videoElem.getAttribute(\"src\")\r\n    if (videoElem.hasAttribute(\"videoURL\")) {\r\n        url = videoElem.getAttribute(\"videoURL\")\r\n    } else if (url === null || url.includes(\"blob\")) {\r\n        url = await fetchVideoURL(articleNode, videoElem)\r\n    }\r\n    return url\r\n}\r\n\r\nexport async function generateModalBody(el: any, program: Program) {\r\n    let found = false\r\n\r\n    let mediaType: MediaType = MediaType.UNDEFINED\r\n\r\n    let mediaInfo: any | null = null\r\n    mediaInfo = await getMediaFromInfoApi(el)\r\n\r\n    let modalBody = \"\"\r\n    let selectedSliderIndex: number = 0\r\n\r\n    let userName = undefined\r\n    if (mediaInfo && mediaInfo.user && mediaInfo.user.username) {\r\n        userName = mediaInfo.user.username\r\n    } else {\r\n        console.log(\"Failed to fetch user information\")\r\n    }\r\n\r\n    let url: string | null = null\r\n\r\n    // Check if is an ad\r\n    const storedSetting1Checkbox = localStorage.getItem(program.NAME + \"_setting1_checkbox\") || \"false\"\r\n    if (storedSetting1Checkbox !== null && storedSetting1Checkbox !== undefined && storedSetting1Checkbox === \"false\" && mediaInfo.product_type == \"ad\") {\r\n        mediaType = MediaType.Ad\r\n        return { found, mediaType, mediaInfo, modalBody, selectedSliderIndex, userName }\r\n    }\r\n\r\n    const mediaPostedAtDateObj = new Date(mediaInfo.taken_at * 1000)\r\n\r\n    let formattedFilename = \"{Username}__{Year}-{Month}-{Day}--{Hour}-{Minute}\"\r\n    const storedSetting1Input = localStorage.getItem(program.NAME + \"_setting1_input\") || formattedFilename\r\n    if (storedSetting1Input !== null && storedSetting1Input !== undefined) {\r\n        const fRegexPlaceholders = {\r\n            Minute: mediaPostedAtDateObj.getMinutes().toString().padStart(2, \"0\"),\r\n            Hour: mediaPostedAtDateObj.getHours().toString().padStart(2, \"0\"),\r\n            Day: mediaPostedAtDateObj.getDate().toString().padStart(2, \"0\"),\r\n            Month: (mediaPostedAtDateObj.getMonth() + 1).toString().padStart(2, \"0\"),\r\n            Year: mediaPostedAtDateObj.getFullYear().toString(),\r\n            Username: userName\r\n        }\r\n        formattedFilename = userFilenameFormatter(storedSetting1Input, fRegexPlaceholders)\r\n    }\r\n\r\n    let openInNewTab = false\r\n    const storedSetting3Checkbox = localStorage.getItem(program.NAME + \"_setting3_checkbox\") || \"false\"\r\n    if (storedSetting3Checkbox !== null && storedSetting3Checkbox !== undefined) {\r\n        openInNewTab = storedSetting3Checkbox === \"true\"\r\n    }\r\n\r\n    if (\"carousel_media\" in mediaInfo) {\r\n        found = true\r\n        mediaType = MediaType.Carousel\r\n\r\n        const isPostView = window.location.pathname.startsWith(\"/p/\")\r\n        let dotsList: any\r\n        if (isPostView) {\r\n            dotsList = el.querySelectorAll(`:scope > div > div > div > div:nth-child(2)>div`)\r\n        } else {\r\n            dotsList = el.querySelectorAll(`:scope > div > div:nth-child(2) >div>div>div>div>div> div:nth-child(2)>div`)\r\n        }        \r\n\r\n        selectedSliderIndex = [...dotsList].findIndex((i) => i.classList.length === 2)\r\n\r\n        modalBody += `<div class=\"slider-container\"><div class=\"slider\">`\r\n\r\n        for (let sC = 0; sC < mediaInfo?.carousel_media?.length; sC++) {\r\n            const scMedia = mediaInfo.carousel_media[sC]\r\n\r\n            if (typeof scMedia.video_dash_manifest !== \"undefined\" && scMedia.video_dash_manifest !== null) {\r\n                url = getImgOrVedioUrl(scMedia)\r\n                if (url === null) {\r\n                    const videoElem: HTMLVideoElement | null = el.querySelector(\"article  div > video\")\r\n                    url = await getVideoSrc(el, videoElem)\r\n                }\r\n\r\n                modalBody += `<div class=\"slide\"><video style=\"background:black;\" height=\"450\" src=\"${url}\" controls=\"controls\" preload=\"metadata\"></video>`\r\n                // Add download button\r\n                if (openInNewTab) {\r\n                    modalBody += `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${url}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n                } else {\r\n                    modalBody += `<a href=\"https://instantgram.1337.pictures/download.php?data=${btoa(url)}:${btoa(formattedFilename + \"_\" + Number(sC + 1) + \".mp4\")}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n                }\r\n\r\n                modalBody += `</div>`\r\n            } else {\r\n                url = getImgOrVedioUrl(scMedia)\r\n                if (url === null) {\r\n                    const imgElem = el.querySelector(\"article div[role] div > img\")\r\n                    if (imgElem) {\r\n                        // media type is image\r\n                        url = imgElem.getAttribute(\"src\")\r\n                    } else {\r\n                        console.log(\"Err: not find media at handle post single\")\r\n                    }\r\n                }\r\n\r\n                modalBody += `<div class=\"slide\"><img src=\"${url}\" />`\r\n                // Add download button\r\n                if (openInNewTab) {\r\n                    modalBody += `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${url}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n                } else {\r\n                    modalBody += `<a href=\"https://instantgram.1337.pictures/download.php?data=${btoa(url)}:${btoa(formattedFilename + \"_\" + Number(sC + 1) + \".jpg\")}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n                }\r\n\r\n                modalBody += `</div>`\r\n            }\r\n        }\r\n\r\n        modalBody += `</div><div class=\"slider-controls\"></div></div>`\r\n    } else {\r\n        // Single video\r\n        if (typeof mediaInfo.video_dash_manifest !== \"undefined\" && mediaInfo.video_dash_manifest !== null) {\r\n            found = true\r\n            mediaType = MediaType.Video\r\n\r\n            url = getImgOrVedioUrl(mediaInfo)\r\n            if (url === null) {\r\n                const videoElem: HTMLVideoElement | null = el.querySelector(\"article  div > video\")\r\n                url = await getVideoSrc(el, videoElem)\r\n            }\r\n\r\n            modalBody += `<video style=\"background:black;\" width=\"500\" height=\"450\" src=\"${url}\" controls=\"controls\" preload=\"metadata\"></video>`\r\n            // Add download button\r\n            if (openInNewTab) {\r\n                modalBody += `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${url}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n            } else {\r\n                modalBody += `<a href=\"https://instantgram.1337.pictures/download.php?data=${btoa(url)}:${btoa(formattedFilename + \".mp4\")}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n            }\r\n            // Single image\r\n        } else {\r\n            found = true\r\n            mediaType = MediaType.Image\r\n\r\n            url = getImgOrVedioUrl(mediaInfo)\r\n            if (url === null) {\r\n                const imgElem = el.querySelector(\"article div[role] div > img\")\r\n                if (imgElem) {\r\n                    // media type is image\r\n                    url = imgElem.getAttribute(\"src\")\r\n                } else {\r\n                    console.log(\"Err: not find media at handle post single\")\r\n                }\r\n            }\r\n\r\n            modalBody += `<img width=\"500\" height=\"450\" src=\"${url}\" />`\r\n            // Add download button\r\n            if (openInNewTab) {\r\n                modalBody += `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${url}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n            } else {\r\n                modalBody += `<a href=\"https://instantgram.1337.pictures/download.php?data=${btoa(url)}:${btoa(formattedFilename + \".jpg\")}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n            }\r\n        }\r\n    }\r\n\r\n    return { found, mediaType, mediaInfo, modalBody, selectedSliderIndex, userName }\r\n}\r\n\r\nexport function getElementInViewPercentage(el: Element): any {\r\n    let viewport: any\r\n    if (window !== null && window !== undefined) {\r\n        viewport = {\r\n            top: window.pageYOffset,\r\n            bottom: window.pageYOffset + window.innerHeight\r\n        }\r\n    } else {\r\n        viewport = document.documentElement\r\n    }\r\n\r\n    const elementBoundingRect = el.getBoundingClientRect()\r\n    const elementPos = {\r\n        top: elementBoundingRect.y + window.pageYOffset,\r\n        bottom: elementBoundingRect.y + elementBoundingRect.height + window.pageYOffset\r\n    }\r\n\r\n    if (viewport.top > elementPos.bottom || viewport.bottom < elementPos.top) {\r\n        return 0\r\n    }\r\n\r\n    // Element is fully within viewport\r\n    if (viewport.top < elementPos.top && viewport.bottom > elementPos.bottom) {\r\n        return 100\r\n    }\r\n\r\n    // Element is bigger than the viewport\r\n    if (elementPos.top < viewport.top && elementPos.bottom > viewport.bottom) {\r\n        return 100\r\n    }\r\n\r\n    const elementHeight = elementBoundingRect.height\r\n    let elementHeightInView = elementHeight\r\n\r\n    if (elementPos.top < viewport.top) {\r\n        elementHeightInView = elementHeight - (window.pageYOffset - elementPos.top)\r\n    }\r\n\r\n    if (elementPos.bottom > viewport.bottom) {\r\n        elementHeightInView = elementHeightInView - (elementPos.bottom - viewport.bottom)\r\n    }\r\n\r\n    const percentageInView = (elementHeightInView / window.innerHeight) * 100\r\n\r\n    return Math.round(percentageInView)\r\n}\r\n\r\nexport const getMediaFromInfoApi = async (articleNode: HTMLElement): Promise<Array<any> | null> => {\r\n    try {\r\n        const appId = findAppId()\r\n        if (!appId) {\r\n            console.log(\"Cannot find appid\")\r\n            return null\r\n        }\r\n        const postId = findPostId(articleNode)\r\n        if (!postId) {\r\n            console.log(\"Cannot find post id\")\r\n            return null\r\n        }\r\n        const mediaId = await findMediaId(postId)\r\n        if (!mediaId) {\r\n            console.log(\"Cannot find media id\")\r\n            return null\r\n        }\r\n        if (!mediaInfoCache.has(mediaId)) {\r\n            const url = \"https://i.instagram.com/api/v1/media/\" + mediaId + \"/info/\"\r\n            const resp = await fetch(url, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"*/*\",\r\n                    \"X-IG-App-ID\": appId,\r\n                },\r\n                credentials: \"include\",\r\n                mode: \"cors\",\r\n            })\r\n\r\n            if (resp.status !== 200) {\r\n                console.log(`Fetch info API failed with status code: ${resp.status}`)\r\n                return null\r\n            }\r\n            const respJson = await resp.json()\r\n            mediaInfoCache.set(mediaId, respJson)\r\n        }\r\n        const infoJson = mediaInfoCache.get(mediaId)\r\n        return infoJson.items[0]\r\n    } catch (e: any) {\r\n        console.log(`Uncatched in getUrlFromInfoApi(): ${e}\\n${e.stack}`)\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getUserFromInfoApi = async (userId: any): Promise<any | null> => {\r\n    try {\r\n        const appId = findAppId()\r\n        if (!appId) {\r\n            console.log(\"Cannot find appid\")\r\n            return null\r\n        }\r\n\r\n        const url = \"https://i.instagram.com/api/v1/users/\" + userId + \"/info/\"\r\n        const resp = await fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"X-IG-App-ID\": appId,\r\n            },\r\n            credentials: \"include\",\r\n            mode: \"cors\",\r\n        })\r\n\r\n        if (resp.status !== 200) {\r\n            console.log(`Fetch info API failed with status code: ${resp.status}`)\r\n            return null\r\n        }\r\n        const infoJson = await resp.json()\r\n        return infoJson\r\n    } catch (e: any) {\r\n        console.log(`Uncatched in getUrlFromInfoApi(): ${e}\\n${e.stack}`)\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getUserInfoFromWebProfileApi = async (userName: any): Promise<any | null> => {\r\n    try {\r\n        const appId = findAppId()\r\n        if (!appId) {\r\n            console.log(\"Cannot find appid\")\r\n            return null\r\n        }\r\n\r\n        const url = \"https://i.instagram.com/api/v1/users/web_profile_info/?username=\" + userName\r\n        const resp = await fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"X-IG-App-ID\": appId,\r\n            },\r\n            credentials: \"include\",\r\n            mode: \"cors\",\r\n        })\r\n\r\n        if (resp.status !== 200) {\r\n            console.log(`Fetch info API failed with status code: ${resp.status}`)\r\n            return null\r\n        }\r\n        const infoJson = await resp.json()\r\n        return infoJson\r\n    } catch (e: any) {\r\n        console.log(`Uncatched in getUrlFromInfoApi(): ${e}\\n${e.stack}`)\r\n        return null\r\n    }\r\n}\r\n\r\nexport function removeStyleTagsWithIDs(idsToRemove) {\r\n    const styleTags = document.querySelectorAll(\"style[id]\")\r\n    styleTags.forEach(styleTag => {\r\n        if (idsToRemove.includes(styleTag.id)) {\r\n            styleTag.parentNode.removeChild(styleTag)\r\n        }\r\n    })\r\n}\r\n\r\nexport function sleep(ms: number): Promise<void> {\r\n    return new Promise(function (resolve) { setTimeout(resolve, ms) })\r\n}\r\n\r\nexport function userFilenameFormatter(filename: string, placeholders: Record<string, string>): string {\r\n    // Replace placeholders with corresponding values\r\n    for (const placeholder in placeholders) {\r\n        const regex = new RegExp(`{${placeholder}}`, \"g\")\r\n        filename = filename.replace(regex, placeholders[placeholder])\r\n    }\r\n\r\n    // Replace spaces with dashes (-)\r\n    filename = filename.replace(/\\s+/g, \"-\")\r\n\r\n    // Remove any special characters except dashes, underscores, and dots\r\n    filename = filename.replace(/[^\\w-.]/g, \"\")\r\n\r\n    return filename\r\n}","import { Program } from \"../App\"\r\nimport { Module } from \"./Module\"\r\nimport { getElementInViewPercentage, generateModalBody } from \"../helpers/utils\"\r\n\r\nexport class FeedScanner implements Module {\r\n    public getName(): string {\r\n        return \"FeedScanner\"\r\n    }\r\n\r\n    /** @suppress {uselessCode} */\r\n    public async execute(program: Program, callback?: any): Promise<any> {\r\n        /* =====================================\r\n         =              FeedScanner            =\r\n         ==================================== */\r\n        try {\r\n            // Define default variables\r\n            // All grabed feed posts\r\n            let $articles: Element | HTMLCollectionOf<HTMLElement>\r\n\r\n            // Article\r\n            let $article: any\r\n\r\n            // Scanner begins\r\n            $articles = document.getElementsByTagName(\"article\")\r\n\r\n            let mediaElInfos: any[] = []\r\n            // Find needed post\r\n            for (let i1 = 0; i1 < $articles.length; i1++) {\r\n                let mediaEl = $articles[i1]\r\n\r\n                if (mediaEl != null && typeof mediaEl.getBoundingClientRect() != null) {\r\n                    let elemVisiblePercentage = getElementInViewPercentage(mediaEl)\r\n                    mediaElInfos.push({ i1, mediaEl, elemVisiblePercentage })\r\n                } else {\r\n                    mediaElInfos.push({ i1, mediaEl, elemVisiblePercentage: 0 })\r\n                }\r\n            }\r\n\r\n            let objMax = mediaElInfos.reduce((max, current) => max.elemVisiblePercentage > current.elemVisiblePercentage ? max : current)\r\n            $article = $articles[objMax.i1]\r\n\r\n            if (typeof $article !== 'undefined' || $article !== null || $article !== '') {\r\n                // DON'T MESS WITH ME INSTA!\r\n                // If any adblocker active dont grab it\r\n                if ($article.getBoundingClientRect().height < 40) {\r\n                    return\r\n                }\r\n\r\n                let v = await generateModalBody($article, program)\r\n\r\n                program.foundMediaObj = {\r\n                    found: v.found,\r\n                    mediaType: v.mediaType,\r\n                    mediaInfo: v.mediaInfo,\r\n                    modalBody: v.modalBody,\r\n                    selectedSliderIndex: v.selectedSliderIndex,\r\n                    userName: v.userName\r\n                }\r\n            }\r\n\r\n            callback(program)\r\n        } catch (e) {\r\n            //console.error(this.getName() + \"()\", `[${program.NAME}] ${program.VERSION}`, e)\r\n            console.error(this.getName() + \"()\", e)\r\n            program.foundMediaObj = {\r\n                found: false,\r\n                mediaType: undefined,\r\n                mediaInfo: undefined,\r\n                modalBody: undefined,\r\n                selectedSliderIndex: undefined,\r\n                userName: undefined\r\n            }\r\n            callback(program)\r\n        }\r\n        /* =====  End of FeedScanner ======*/\r\n    }\r\n}","import { Program } from \"../App\"\r\nimport { Module } from \"./Module\"\r\nimport { generateModalBody } from \"../helpers/utils\"\r\n\r\nexport class PostReelScanner implements Module {\r\n    public getName(): string {\r\n        return \"PostReelScanner\"\r\n    }\r\n\r\n    /** @suppress {uselessCode} */\r\n    public async execute(program: Program, callback?: any): Promise<any> {\r\n        /* =====================================\r\n         =              PostScanner            =\r\n         ==================================== */\r\n        try {\r\n            // Define default variables\r\n            // Article\r\n            let $article: any\r\n\r\n            // Scanner begins\r\n            if (document.querySelector('div[role=\"dialog\"] article')) {\r\n                $article = document.querySelector('div[role=\"dialog\"] article')\r\n            } else {\r\n                $article = document.querySelector(\"section main > div > :first-child > :first-child\")\r\n            }\r\n\r\n            if (typeof $article !== 'undefined' || $article !== null || $article !== '') {\r\n                let v = await generateModalBody($article, program)\r\n\r\n                program.foundMediaObj = {\r\n                    found: v.found,\r\n                    mediaType: v.mediaType,\r\n                    mediaInfo: v.mediaInfo,\r\n                    modalBody: v.modalBody,\r\n                    selectedSliderIndex: v.selectedSliderIndex,\r\n                    userName: v.userName\r\n                }\r\n            }\r\n\r\n            callback(program)\r\n        } catch (e) {\r\n            console.error(this.getName() + \"()\", `[${program.NAME}] ${program.VERSION}`, e)\r\n            program.foundMediaObj = {\r\n                found: false,\r\n                mediaType: undefined,\r\n                mediaInfo: undefined,\r\n                modalBody: undefined,\r\n                selectedSliderIndex: undefined,\r\n                userName: undefined\r\n            }\r\n            callback(program)\r\n        }\r\n        /* =====  End of PostScanner ======*/\r\n    }\r\n}","import { Program } from \"../App\"\r\nimport { Module } from \"./Module\"\r\nimport { getElementInViewPercentage, generateModalBody } from \"../helpers/utils\"\r\n\r\nexport class ReelsScanner implements Module {\r\n    public getName(): string {\r\n        return \"ReelsScanner\"\r\n    }\r\n\r\n    public getPostId(): string {\r\n        const url = window.location.href\r\n        const regex = /\\/p\\/([a-zA-Z0-9_-]+)/\r\n        const postId = url.match(regex)?.[1]\r\n\r\n        return postId\r\n    }\r\n\r\n    /** @suppress {uselessCode} */\r\n    public async execute(program: Program, callback?: any): Promise<any> {\r\n        /* =====================================\r\n         =        ReelsScanner                 =\r\n         ==================================== */\r\n        try {\r\n            // Define default variables\r\n            let modalBody = \"\"\r\n\r\n            // All grabed feed posts\r\n            let $articles: any\r\n\r\n            // Article\r\n            let $article: any\r\n\r\n            // Scanner begins\r\n            $articles = document.querySelectorAll('section > main > div > div')\r\n            $articles = Array.from($articles).filter(function (element) {\r\n                return (<any>element).children.length > 0\r\n            })\r\n\r\n            let mediaElInfos: any[] = []\r\n            // Find needed post\r\n            for (let i1 = 0; i1 < $articles.length; i1++) {\r\n                let mediaEl = $articles[i1]\r\n\r\n                if (mediaEl != null && typeof mediaEl.getBoundingClientRect() != null) {\r\n                    let elemVisiblePercentage = getElementInViewPercentage(mediaEl)\r\n                    mediaElInfos.push({ i1, mediaEl, elemVisiblePercentage })\r\n                } else {\r\n                    mediaElInfos.push({ i1, mediaEl, elemVisiblePercentage: 0 })\r\n                }\r\n            }\r\n\r\n            let objMax = mediaElInfos.reduce((max, current) => max.elemVisiblePercentage > current.elemVisiblePercentage ? max : current)\r\n            $article = $articles[objMax.i1]\r\n\r\n            if (typeof $article !== 'undefined' || $article !== null || $article !== '') {\r\n                let v = await generateModalBody($article, program)\r\n                modalBody += v.modalBody\r\n\r\n                program.foundMediaObj = {\r\n                    found: v.found,\r\n                    mediaType: v.mediaType,\r\n                    mediaInfo: v.mediaInfo,\r\n                    modalBody: modalBody,\r\n                    selectedSliderIndex: v.selectedSliderIndex,\r\n                    userName: v.userName\r\n                }\r\n            }\r\n\r\n            callback(program)\r\n        } catch (e) {\r\n            console.error(this.getName() + \"()\", `[${program.NAME}] ${program.VERSION}`, e)\r\n            program.foundMediaObj = {\r\n                found: false,\r\n                mediaType: undefined,\r\n                mediaInfo: undefined,\r\n                modalBody: undefined,\r\n                selectedSliderIndex: undefined,\r\n                userName: undefined\r\n            }\r\n            callback(program)\r\n        }\r\n        /* =====  End of ReelsScanner ======*/\r\n    }\r\n}","import { Program } from \"../App\"\r\nimport { Module } from \"./Module\"\r\nimport { generateModalBody } from \"../helpers/utils\"\r\n\r\nexport class StoriesScanner implements Module {\r\n    public getName(): string {\r\n        return \"StoriesScanner\"\r\n    }\r\n\r\n    public pausePlayCurrentStory(el: any) {\r\n        // Trigger a click event on the pause button if it exists\r\n        let svgElement = el.querySelector(\"svg[viewBox='0 0 48 48']\")\r\n        if (svgElement !== null) {\r\n            if (typeof (<HTMLElement>svgElement).click === \"function\") {\r\n                (<HTMLElement>svgElement).click()\r\n            } else {\r\n                // Alternative approach for older browsers\r\n                const clickEvent = new MouseEvent(\"click\", {\r\n                    view: window,\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                })\r\n                svgElement.dispatchEvent(clickEvent)\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @suppress {uselessCode} */\r\n    public async execute(program: Program, callback?: any): Promise<any> {\r\n        /* =====================================\r\n         =            StoriesScanner           =\r\n         ==================================== */\r\n        try {\r\n            // Define default variables\r\n            let modalBody = \"\"\r\n\r\n            // Container\r\n            let $container = document.querySelector(\"body > div:nth-child(5)\")\r\n\r\n            if (process.env.DEV) {\r\n                console.info([\"$container\", $container])\r\n            }\r\n\r\n            // Scanner begins\r\n            if ($container) {\r\n                // Detect right frontend\r\n                let multipleStoriesCount = $container.querySelector(\"section > div > div\").childElementCount\r\n\r\n                // Specific selector for each frontend\r\n                if (multipleStoriesCount > 1) {\r\n                    let stories: any = $container.querySelector(\"section > div > div\").childNodes\r\n\r\n                    for (let i = 0; i < (<any>stories).length; i++) {\r\n                        let transformStyle = (<any>stories[i]).style.transform\r\n\r\n                        if (<any>stories[i].childElementCount > 0 && transformStyle.includes(\"scale(1)\")) {\r\n                            // Pause any playing videos before show modal\r\n                            const pauseSettings = localStorage.getItem(program.NAME + '_setting2_checkbox')\r\n                            if (pauseSettings !== null && pauseSettings !== undefined && pauseSettings === 'true') {\r\n                                this.pausePlayCurrentStory(stories[i])\r\n                            }\r\n\r\n                            let v = await generateModalBody(stories[i], program)\r\n                            modalBody += v.modalBody\r\n\r\n                            program.foundMediaObj = {\r\n                                found: v.found,\r\n                                mediaType: v.mediaType,\r\n                                mediaInfo: v.mediaInfo,\r\n                                modalBody: modalBody,\r\n                                selectedSliderIndex: v.selectedSliderIndex,\r\n                                userName: v.userName\r\n                            }\r\n                            break\r\n                        }\r\n                    }\r\n                } else {\r\n                    let story: any = $container.querySelectorAll(\"section\")\r\n                    // Pause any playing videos before show modal\r\n                    const pauseSettings = localStorage.getItem(program.NAME + '_setting2_checkbox')\r\n                    if (pauseSettings !== null && pauseSettings !== undefined && pauseSettings === 'true') {\r\n                        this.pausePlayCurrentStory(story[0])\r\n                    }\r\n\r\n                    let v = await generateModalBody(story, program)\r\n                    modalBody += v.modalBody\r\n\r\n                    program.foundMediaObj = {\r\n                        found: v.found,\r\n                        mediaType: v.mediaType,\r\n                        mediaInfo: v.mediaInfo,\r\n                        modalBody: modalBody,\r\n                        selectedSliderIndex: v.selectedSliderIndex,\r\n                        userName: v.userName\r\n                    }\r\n                }\r\n            } else {\r\n                program.foundMediaObj = {\r\n                    found: false,\r\n                    mediaType: undefined,\r\n                    mediaInfo: undefined,\r\n                    modalBody: undefined,\r\n                    selectedSliderIndex: undefined,\r\n                    userName: undefined\r\n                }\r\n            }\r\n\r\n            callback(program)\r\n        } catch (e) {\r\n            console.error(this.getName() + \"()\", `[${program.NAME}] ${program.VERSION}`, e)\r\n            program.foundMediaObj = {\r\n                found: false,\r\n                mediaType: undefined,\r\n                mediaInfo: undefined,\r\n                modalBody: undefined,\r\n                selectedSliderIndex: undefined,\r\n                userName: undefined\r\n            }\r\n            callback(program)\r\n        }\r\n        /* =====  End of StoriesScanner ======*/\r\n    }\r\n}","import { Program } from \"../App\"\nimport { Module } from \"./Module\"\nimport { cssCarouselSlider, cssGeneral, cssSlideOn } from \"../components/Interconnect\"\nimport { FeedScanner } from \"./FeedScanner\"\nimport { PostReelScanner } from \"./PostReelScanner\"\nimport { ReelsScanner } from \"./ReelsScanner\"\nimport { StoriesScanner } from \"./StoriesScanner\"\nimport { removeStyleTagsWithIDs } from \"../helpers/utils\"\n\nexport class MediaScanner implements Module {\n    public getName(): string {\n        return \"MediaScanner\"\n    }\n\n    /** @suppress {uselessCode} */\n    public async execute(program: Program, callback?: any): Promise<any> {\n        /* =====================================\n         =         MediaScanner                =\n         ==================================== */\n        try {\n            // Scanner begins\n            // Cancel execution when modal already opened\n            const appRunning = document.querySelector(\"div.\" + program.NAME + \"-modal-overlay.\" + program.NAME + \"-modal-visible.\" + program.NAME + \"-modal-show\")\n            if (appRunning) {\n                let iModal: any = document.querySelector(\".\" + program.NAME + \"-modal\")\n                iModal.style.animation = \"horizontal-shaking 0.25s linear infinite\"\n\n                // Stop shaking\n                setTimeout(function () {\n                    iModal.style.animation = null\n                }, 1000)\n                return\n            }\n            // Remove previous executed bookmarklet stuff\n            const idsToRemove = [\n                program.NAME + '-cssGeneral',\n                program.NAME + '-cssSlideOn',\n                program.NAME + '-cssCarouselSlider'\n            ]\n            // Call the function to remove <style> tags from the entire DOM\n            removeStyleTagsWithIDs(idsToRemove)\n\n            // Create new needed stuff\n            const generalStyle = document.createElement(\"style\")\n            generalStyle.id = program.NAME + \"-cssGeneral\"\n            // Set the innerHTML property to the JavaScript code\n            generalStyle.innerHTML = cssGeneral\n            // Append the script element to the document\n            document.body.appendChild(generalStyle)\n\n            // Switch css\n            const switchStyle = document.createElement(\"style\")\n            switchStyle.id = program.NAME + \"-cssSlideOn\"\n            // Set the innerHTML property to the JavaScript code\n            switchStyle.innerHTML = cssSlideOn\n            // Append the script element to the document\n            document.body.appendChild(switchStyle)\n\n            const carouselSliderStyle = document.createElement(\"style\")\n            carouselSliderStyle.id = program.NAME + \"-cssCarouselSlider\"\n            // Set the innerHTML property to the JavaScript code\n            carouselSliderStyle.innerHTML = cssCarouselSlider\n            // Append the script element to the document\n            document.body.appendChild(carouselSliderStyle)\n\n            // Handle specific modules\n            // Detect profile root path\n            if (program.regexProfilePath.test(program.path)) {\n                program.foundMediaObj = {\n                    found: false,\n                    mediaType: undefined,\n                    mediaInfo: undefined,\n                    modalBody: undefined,\n                    selectedSliderIndex: undefined,\n                    userName: undefined\n                }\n                callback(program)\n                return\n            }\n\n            // Detect story video/image\n            if (program.regexStoriesURI.test(program.path)) {\n                new StoriesScanner().execute(program, function (scannerProgram: Program) {\n                    if (scannerProgram.foundMediaObj.found) {\n                        scannerProgram.foundByModule = new StoriesScanner().getName()\n                    }\n\n                    callback(scannerProgram)\n                })\n            }\n\n            // Detect feed posts\n            if (program.regexRootPath.test(program.path)) {\n                new FeedScanner().execute(program, function (scannerProgram: Program) {\n                    if (scannerProgram.foundMediaObj.found) {\n                        scannerProgram.foundByModule = new FeedScanner().getName()\n                    }\n\n                    callback(scannerProgram)\n                })\n            }\n\n            // Detect reels\n            if (program.regexReelsURI.test(program.path)) {\n                new ReelsScanner().execute(program, function (scannerProgram: Program) {\n                    if (scannerProgram.foundMediaObj.found) {\n                        scannerProgram.foundByModule = new ReelsScanner().getName()\n                    }\n\n                    callback(scannerProgram)\n                })\n            }\n\n            // Detect modal posts, reels\n            if (program.regexPostPath.test(program.path) || program.regexReelURI.test(program.path)) {\n                new PostReelScanner().execute(program, function (scannerProgram: Program) {\n                    if (scannerProgram.foundMediaObj.found) {\n                        scannerProgram.foundByModule = new PostReelScanner().getName()\n                    }\n\n                    callback(scannerProgram)\n                })\n            }\n            return\n        } catch (e) {\n            console.error(this.getName() + \"()\", `[${program.NAME}] ${program.VERSION}`, e)\n            program.foundMediaObj = {\n                found: false,\n                mediaType: undefined,\n                mediaInfo: undefined,\n                modalBody: undefined,\n                selectedSliderIndex: undefined,\n                userName: undefined\n            }\n            callback(program)\n        }\n        /* =====  End of MediaScanner ======*/\n    }\n}","export const cssGeneral = `@keyframes horizontal-shaking{0%,100%{transform:translateX(0)}25%,75%{transform:translateX(5px)}50%{transform:translateX(-5px)}}.tns-nav{text-align:center;margin:10px 0}.tns-nav>.tns-nav-active{background:#999!important}.tns-nav>[aria-controls]{cursor:pointer;width:25px;height:25px;padding:0;margin:0 5px;border-radius:50%;background:#ddd;border:0}.container{display:flex;flex-direction:column}.row{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.row input[type=text]{width:100%}.mb-20{margin-bottom:20px}.left{text-align:left}`\r\n\r\nexport const cssCarouselSlider = `.slider-container{width:500px;overflow:hidden;position:relative}.slider{height:100%;display:flex;transition:left .5s;position:inherit}.slide{position:relative;background:#000}.slide img, .slide video{width:501px;height:300px;object-fit:contain}.slider-controls{display:flex;justify-content:center;margin-top:10px;margin-bottom:10px}.slider-controls button{cursor: pointer;width:25px;height:25px;padding:0;margin:0 5px;border-radius:50%;background:#ddd;border:0}.slider-controls button.active{background:#999}`\r\n\r\nexport const cssSlideOn = `.slideon{position:relative;display:inline-block;width:42px;height:24px;vertical-align:middle}.slideon>input,input.slideon{display:none}.slideon-slider{position:absolute;cursor:pointer;border-radius:34px;top:0;left:0;right:0;bottom:0;background-color:#ccc;-webkit-transition:.4s;transition:.4s}.slideon-slider:before{position:absolute;content:\"\";height:22px;width:22px;left:1px;bottom:1px;border-radius:50%;background-color:#fff;-webkit-transition:.4s;transition:.4s;-webkit-box-shadow:0 0 3px 0 rgba(0,0,0,.45);-moz-box-shadow:0 0 3px 0 rgba(0,0,0,.45);box-shadow:0 0 3px 0 rgb(0,0,0,.45)}.slideon input:checked~.slideon-slider{background-color:#007bff}.slideon input:checked~.slideon-slider:before{-webkit-transform:translateX(18px);-ms-transform:translateX(18px);transform:translateX(18px)}.slideon input:disabled~.slideon-slider{opacity:.5}`","import { program } from \"..\"\r\nimport { sleep } from \"../helpers/utils\"\r\n\r\n/**\r\n * An interface for the modal button\r\n */\r\nexport interface ModalButton {\r\n  text: string\r\n  active?: boolean\r\n\r\n  callback?(): void\r\n}\r\n\r\nexport interface ModalOptions {\r\n  imageURL?: string\r\n  heading?: (HTMLElement | string)[]\r\n  headingStyle?: string\r\n  body?: (HTMLElement | string)[]\r\n  bodyStyle?: string\r\n  buttonList?: ModalButton[]\r\n  callback?(arg0: Modal, arg1: HTMLElement): void\r\n}\r\n\r\nexport class Modal {\r\n  public imageURL?: string\r\n  public heading?: (HTMLElement | string)[]\r\n  public headingStyle?: string\r\n  public body?: (HTMLElement | string)[]\r\n  public bodyStyle?: string\r\n  public buttonList?: ModalButton[]\r\n  public callback?(arg0: Modal, arg1: HTMLElement): void\r\n\r\n  private modal: HTMLDivElement | null = null\r\n\r\n  public constructor(modalOptions?: ModalOptions) {\r\n    this.imageURL = modalOptions?.imageURL || ''\r\n    this.heading = modalOptions?.heading || ['']\r\n    this.headingStyle = modalOptions?.headingStyle || ''\r\n    this.body = modalOptions?.body || ['']\r\n    this.bodyStyle = modalOptions?.bodyStyle || ''\r\n    this.buttonList = modalOptions?.buttonList || []\r\n    this.callback = modalOptions?.callback || null\r\n\r\n    let element = document.getElementById(program.NAME + '-modal')\r\n    if (element == null) {\r\n      var style = document.createElement('style')\r\n      style.id = program.NAME + '-modal'\r\n      style.innerHTML = `.${program.NAME}-modal-overlay{display:none!important;opacity:0!important;transition:all ease .1s!important;position:fixed!important;top:0!important;left:0!important;right:0!important;bottom:0!important;z-index:1000!important;background:rgba(0,0,0,.65)!important;justify-content:center!important;align-items:center!important}.${program.NAME}-modal{transition:width ease-in-out .1s!important;display:inline-block!important;width:400px!important;padding:1.6px!important;z-index:1001!important}.${program.NAME}-modal select{margin-left:.8px!important;border:solid 1px #dbdbdb!important;border-radius:3px!important;color:#262626!important;outline:0!important;padding:3px!important;text-align:center!important}@media (min-width:736px){.${program.NAME}-modal{width:500px!important}}.${program.NAME}-modal-content{position:relative;display:flex;flex-direction:column;width:100%!important;pointer-events:auto!important;background-clip:padding-box!important;outline:0!important}.${program.NAME}-modal-header{color:#fff!important;background-color:#fd1d1d!important;background-image:linear-gradient(45deg,#405de6,#5851db,#833ab4,#c13584,#e1306c,#fd1d1d)!important;border-top-left-radius:12px!important;border-top-right-radius:12px!important;padding:0 16px 0 16px!important}.${program.NAME}-modal-header h5{color:#fff!important;font-family:\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif!important;font-size:16px!important;margin:revert!important}.${program.NAME}-modal-header h5:nth-child(2){margin-top:-15px!important;margin-bottom:20px!important}.${program.NAME}-modal-body{background:#fff!important;color:black!important;position:relative!important;-webkit-box-flex:1!important;-ms-flex:1 1 auto!important;flex:1 1 auto!important;padding:16px!important}.${program.NAME}-modal-body > img{background: black;object-fit:scale-down}.${program.NAME}-modal-body p{display:block!important;margin:revert!important;margin-block-start:1em!important;font-family:\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif!important;font-size:16px!important}.${program.NAME}-modal-footer{background-color:#fff!important;border-top:1px solid #dbdbdb!important;border-left:0!important;border-right:0!important;border-bottom-left-radius:12px!important;border-bottom-right-radius:12px!important;line-height:1.5!important;min-height:48px!important;padding:4px 8px!important;user-select:none!important;display:-webkit-box!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-align:center!important;-ms-flex-align:center!important;align-items:center!important;-webkit-box-pack:end!important;-ms-flex-pack:end!important;justify-content:center!important}.${program.NAME}-modal-footer button{width:100%!important;min-height:39px!important;background-color:transparent!important;border:0!important;outline:0!important;cursor:pointer!important;font-family:\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif!important;font-size:16px!important}.${program.NAME}-modal-footer button.active{color:#0095e2!important}.${program.NAME}-modal-show{opacity:1!important}.${program.NAME}-modal-visible{display:flex!important}#${program.NAME}-bulk-download-indicator{text-align:center!important}.${program.NAME}-modal-db {\r\n    color: #fff!important;\r\n    background: linear-gradient(45deg,#405de6,#5851db,#833ab4,#c13584,#e1306c,#fd1d1d)!important;\r\n    display: block;\r\n    padding: 0.8rem;\r\n    width: 100%;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n.${program.NAME}-modal-db:focus {\r\n  outline: none;\r\n  background: linear-gradient(45deg, rgba(64, 93, 230, 0.5), rgba(88, 81, 219, 0.5), rgba(131, 58, 180, 0.5), rgba(193, 53, 132, 0.5), rgba(225, 48, 108, 0.5), rgba(253, 29, 29, 0.5))!important;\r\n}\r\n.${program.NAME}-modal-header {\r\n  text-align: center;\r\n}\r\n.${program.NAME}-modal-header h5 {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.header-text-left {\r\n  margin-right: auto;\r\n}\r\n.header-text-right {\r\n  margin-left: auto;\r\n}\r\n.header-text-middle {\r\n  margin: 0;\r\n}\r\n.header-text-right:last-child {\r\n  margin-right: 30px;\r\n}\r\n.${program.NAME}-settings {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  background-color: rgba(255, 255, 255, 0.08);\r\n  border-color: rgba(255, 255, 255, 0.2);\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  border-radius: 0.3rem;\r\n  transition: color 0.2s, background-color 0.2s, border-color 0.2s;\r\n  width: 40px;\r\n  height: 40px;\r\n  top: 16px;\r\n  right: 16px;\r\n  position: absolute;\r\n}\r\n.${program.NAME}-settings:hover {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  text-decoration: none;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-color: rgba(255, 255, 255, 0.3);\r\n}\r\n.${program.NAME}-modal-body input {\r\n  color: black!important;\r\n}\r\n.${program.NAME}-modal-body button:not([data-index]) {\r\n  border-top-left-radius:0!important;\r\n  border-bottom-left-radius:0!important;\r\n}`\r\n      document.head.appendChild(style)\r\n    }\r\n  }\r\n\r\n  public get element(): HTMLDivElement | null {\r\n    return this.modal\r\n  }\r\n\r\n  private createModal(): HTMLDivElement {\r\n    const modalElement = document.createElement('div')\r\n    modalElement.classList.add(program.NAME + '-modal-overlay')\r\n\r\n    const modal = document.createElement('div')\r\n    modal.classList.add(program.NAME + '-modal')\r\n    modalElement.appendChild(modal)\r\n\r\n    const modalContent = document.createElement('div')\r\n    modalContent.classList.add(program.NAME + '-modal-content')\r\n    modal.appendChild(modalContent)\r\n\r\n    const modalHeader = document.createElement('div')\r\n    modalHeader.classList.add(program.NAME + '-modal-header')\r\n    if (this.headingStyle.length > 0) {\r\n      modalHeader.setAttribute('style', this.headingStyle)\r\n    }\r\n    modalContent.appendChild(modalHeader)\r\n\r\n    this.heading.forEach(heading => {\r\n      if (typeof heading === 'string' && !/<\\/?[a-z][\\s\\S]*>/i.test(heading)) {\r\n        const modalTitle = document.createElement('h5')\r\n        modalTitle.innerHTML = heading\r\n        modalHeader.appendChild(modalTitle)\r\n      } else {\r\n        if (/<\\/?[a-z][\\s\\S]*>/i.test(heading as string)) {\r\n          let i\r\n          let a = document.createElement('div')\r\n          let b = document.createDocumentFragment()\r\n          a.innerHTML = heading as string\r\n          while (i = a.firstChild) {\r\n            b.appendChild(i)\r\n          }\r\n          modalHeader.appendChild(b)\r\n        } else {\r\n          modalHeader.appendChild(heading as HTMLElement)\r\n        }\r\n      }\r\n    })\r\n\r\n    const modalBody = document.createElement('div')\r\n    modalBody.classList.add(program.NAME + '-modal-body')\r\n    if (this.bodyStyle.length > 0) {\r\n      modalBody.setAttribute('style', this.bodyStyle)\r\n    }\r\n    modalContent.appendChild(modalBody)\r\n\r\n    if (this.imageURL.length > 0) {\r\n      const imageWrapper = document.createElement('div')\r\n      modalContent.appendChild(imageWrapper)\r\n\r\n      const image = document.createElement('img')\r\n      image.setAttribute('height', '76px')\r\n      image.setAttribute('width', '76px')\r\n      image.style.margin = 'auto'\r\n      image.style.paddingBottom = '20px'\r\n      image.setAttribute('src', this.imageURL)\r\n      imageWrapper.appendChild(image)\r\n    }\r\n\r\n    this.body.forEach(content => {\r\n      if (typeof content === 'string' && !/<\\/?[a-z][\\s\\S]*>/i.test(content)) {\r\n        const modalText = document.createElement('p')\r\n        modalText.innerText = content\r\n        modalBody.appendChild(modalText)\r\n      } else {\r\n        if (/<\\/?[a-z][\\s\\S]*>/i.test(content as string)) {\r\n          let i\r\n          let a = document.createElement('div')\r\n          let b = document.createDocumentFragment()\r\n          a.innerHTML = content as string\r\n          while (i = a.firstChild) {\r\n            b.appendChild(i)\r\n          }\r\n          modalBody.appendChild(b)\r\n        } else {\r\n          modalBody.appendChild(content as HTMLElement)\r\n        }\r\n      }\r\n    })\r\n\r\n    if (this.buttonList.length > 0) {\r\n      const modalFooter = document.createElement('div')\r\n      modalFooter.classList.add(program.NAME + '-modal-footer')\r\n      modalContent.appendChild(modalFooter)\r\n\r\n      this.buttonList.forEach((button: ModalButton) => {\r\n        const modalButton = document.createElement('button')\r\n        modalButton.classList.add(program.NAME + '-modal-button')\r\n        modalButton.innerText = button.text\r\n\r\n        if (button.active) {\r\n          modalButton.classList.add('active')\r\n        }\r\n\r\n        modalButton.onclick = () => {\r\n          if (button && button.callback) {\r\n            button.callback()\r\n          }\r\n\r\n          this.close.bind(this)()\r\n        }\r\n        modalFooter.appendChild(modalButton)\r\n      })\r\n    } else {\r\n      modalContent.style.paddingBottom = '4px;'\r\n    }\r\n\r\n    return modalElement\r\n  }\r\n\r\n  public async open(): Promise<void> {\r\n    if (this.modal) {\r\n      await this.close()\r\n    }\r\n\r\n    this.modal = this.createModal()\r\n    document.body.appendChild(this.modal)\r\n    this.modal.classList.add(program.NAME + '-modal-visible')\r\n    setTimeout(() => {\r\n      this.modal.classList.add(program.NAME + '-modal-show')\r\n    })\r\n\r\n    // Re-trigger the callback function if it exists\r\n    if (this?.callback) {\r\n      this.callback(this, this.modal)\r\n    }\r\n  }\r\n\r\n  public async close(): Promise<void> {\r\n    if (!this.modal) {\r\n      return\r\n    }\r\n\r\n    this.modal.classList.remove(program.NAME + '-modal-show')\r\n    await sleep(100)\r\n    this.modal.classList.remove(program.NAME + '-modal-visible')\r\n    this.modal.parentNode.removeChild(this.modal)\r\n    this.modal = null\r\n\r\n    // Remove previous executed bookmarklet stuff\r\n    const idsToRemove = [\r\n      program.NAME + '-cssGeneral',\r\n      program.NAME + '-cssSlideOn',\r\n      program.NAME + '-cssCarouselSlider'\r\n    ]\r\n    // Remove <style> tags from the entire DOM\r\n    const styleTags = document.querySelectorAll(\"style[id]\")\r\n    styleTags.forEach(styleTag => {\r\n      if (idsToRemove.includes(styleTag.id)) {\r\n        styleTag.parentNode.removeChild(styleTag)\r\n      }\r\n    })\r\n  }\r\n\r\n  public async refresh(): Promise<void> {\r\n    if (this.modal) {\r\n      this.modal.parentNode.removeChild(this.modal)\r\n      this.modal = null\r\n    }\r\n    await this.open()\r\n\r\n    // Re-trigger the callback function if it exists\r\n    if (this?.callback) {\r\n      this.callback(this, this.modal.querySelector('.' + program.NAME + '-modal-body')!)\r\n    }\r\n  }\r\n}","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","import { program } from \"..\"\r\nimport { Modal } from \"../components/Modal\"\r\nimport localize from \"../helpers/localize\"\r\n\r\nfunction informOutdatedVersionInDevConsole(data: InstantgramData): void {\r\n    console.warn(localize('modules.update@consoleWarnOutdatedInfo'))\r\n    console.warn(\r\n        localize('modules.update@consoleWarnOutdatedInfoVersions')\r\n            .replace('${data.version}', data.version)\r\n            .replace('${data.onlineVersion}', data.onlineVersion)\r\n    )\r\n}\r\n\r\nfunction determineIfGetUpdateIsNecessary(localVersion: string): boolean {\r\n    const data = window.localStorage.getItem(`${program.NAME}`) as string\r\n\r\n    if (typeof data === 'string') {\r\n        const _data = JSON.parse(data) as InstantgramData\r\n\r\n        // Sync installed version with localStorage\r\n        window.localStorage.setItem(\r\n            `${program.NAME}`,\r\n            JSON.stringify({\r\n                version: localVersion,\r\n                onlineVersion: _data.onlineVersion,\r\n                lastVerification: _data.lastVerification,\r\n                dateExpiration: _data.dateExpiration\r\n            })\r\n        )\r\n\r\n        // compare versions cached\r\n        const onlineVersion = new Date(_data.onlineVersion)\r\n        const installedVersion = new Date(_data.onlineVersion)\r\n        if (onlineVersion > installedVersion) {\r\n            informOutdatedVersionInDevConsole(_data)\r\n        }\r\n\r\n        // compare date now with expiration\r\n        if (Date.now() > _data.dateExpiration) {\r\n            return true // must have update new informations from github\r\n        } else {\r\n            return false // have localStorage and is on the date\r\n        }\r\n    } else {\r\n        return true // dont have localStorage\r\n    }\r\n}\r\n\r\nasync function update(localVersion: string): Promise<void> {\r\n    if (determineIfGetUpdateIsNecessary(localVersion)) {\r\n        const response = await fetch(\r\n            'https://www.instagram.com/graphql/query/?query_hash=003056d32c2554def87228bc3fd9668a&variables={%22id%22:45039295328,%22first%22:100}'\r\n        )\r\n        const respJson = await response.json()\r\n        const changelog = respJson.data.user.edge_owner_to_timeline_media.edges[0].node.edge_media_to_caption.edges[0].node.text\r\n\r\n        const changelogSplitted = changelog.split(\"::\")\r\n        const changelogNewReleaseDate = changelogSplitted[0]\r\n        const changelogText = changelogSplitted[1]\r\n\r\n        // Generate unordered list\r\n        const sentences = changelogText.split(/[.!?]/)\r\n        let ul = '<ul style=\"padding: 20px;\">'\r\n        sentences.forEach((sentence: string) => {\r\n            if (sentence.trim() !== '') {\r\n                ul += `<li>${sentence.trim()}</li>`\r\n            }\r\n        })\r\n        ul += '</ul>'\r\n\r\n        const onlineVersion = changelogNewReleaseDate\r\n\r\n        // verify update each 2 days\r\n        const limitDate = new Date()\r\n        limitDate.setTime(limitDate.getTime() + 6 * 60 * 60 * 1000)\r\n\r\n        window.localStorage.setItem(\r\n            `${program.NAME}`,\r\n            JSON.stringify({\r\n                version: localVersion,\r\n                onlineVersion,\r\n                lastVerification: Date.now(),\r\n                dateExpiration: limitDate.valueOf()\r\n            })\r\n        )\r\n\r\n        console.info(localize('modules.update@determineIfGetUpdateIsNecessary_updated'))\r\n\r\n        // if instagram post had a update, notify in console and in a modal\r\n        const _onlineVersion = new Date(onlineVersion)\r\n        const installedVersion = new Date(localVersion)\r\n        if (_onlineVersion > installedVersion) {\r\n            new Modal({\r\n                heading: [\r\n                    `<h5>\r\n                        <span class=\"header-text-left\">[${program.NAME}]</span>\r\n                        <span class=\"header-text-right\" style=\"margin-right: 0\">v${localVersion}</span>\r\n                    </h5>\r\n                    `\r\n                ],\r\n                body: [\r\n                    `<div style='display: block;border: 2px solid rgb(0 0 0 / 70%);border-left: none;border-right: none;border-top: none;padding: 5px;font-variant: small-caps;font-weight: 900;font-size: 16px;'>Es ist ein neues Update verfügbar <span style='float:right'>v${onlineVersion}</span></div><div style='text-align:left'><h2 style='font-weight: bold;'><br>Changelog</h2>${ul}</div><a href='http://thinkbig-company.github.io/${program.NAME}' target='_blank' onmouseover=\"this.style.textDecoration='underline'\" onmouseout=\"this.style.textDecoration='initial'\" style='display: block; text-align: center;text-decoration: initial; margin: 0px auto; padding: 10px; color: black; border-style: solid; border-image-slice: 1; border-width: 3px; border-image-source: linear-gradient(to left, rgb(213, 58, 157), rgb(116, 58, 213));'>${localize('modules.update@determineIfGetUpdateIsNecessary_@load_update')}</a>`,\r\n                ],\r\n                buttonList: [\r\n                    {\r\n                        active: true,\r\n                        text: 'Ok',\r\n                    },\r\n                ],\r\n            }).open()\r\n\r\n            const data = JSON.parse(window.localStorage.getItem(`${program.NAME}`) as string)\r\n            informOutdatedVersionInDevConsole(data)\r\n        } else {\r\n            console.info(window.localStorage.getItem(`${program.NAME}`))\r\n        }\r\n    }\r\n}\r\n\r\nexport default update","import { Program } from \"./App\"\r\nimport { MediaScanner } from \"./modules/MediaScanner\"\r\nimport { Modal } from \"./components/Modal\"\r\nimport { detect } from \"detect-browser\"\r\nimport update from \"./modules/Update\"\r\nimport localize from \"./helpers/localize\"\r\nimport { getUserFromInfoApi, getUserInfoFromWebProfileApi, removeStyleTagsWithIDs } from \"./helpers/utils\"\r\nimport { MediaType } from \"./model/mediaType\"\r\n\r\nconsole.clear()\r\n\r\nconst APP_NAME = \"instantgram_light\"\r\n// Init browser detection\r\nconst browser = detect()\r\n\r\nexport const program: Program = {\r\n    NAME: APP_NAME,\r\n    VERSION: process.env.VERSION as string,\r\n    browser: browser,\r\n    hostname: window.location.hostname,\r\n    path: window.location.pathname,\r\n    regexHostname: /^instagram\\.com/,\r\n    regexRootPath: /^\\/+$/,\r\n    regexProfilePath: /^\\/([A-Za-z0-9._]{2,3})+\\/$/,\r\n    regexPostPath: /^\\/p\\//,\r\n    regexReelURI: /reel\\/(.*)+/,\r\n    regexReelsURI: /reels\\/(.*)+/,\r\n    regexStoriesURI: /stories\\/(.*)+/,\r\n    foundByModule: null,\r\n    foundMediaObj: undefined\r\n}\r\n\r\nif (process.env.DEV) {\r\n    console.info([\"Developer Mode Caution!\", program])\r\n    if (program.browser) {\r\n        console.info([\"Browser Name\", program.browser.name])\r\n        console.info([\"Browser Version\", program.browser.version])\r\n        console.info([\"Browser OS\", program.browser.os])\r\n    }\r\n}\r\n\r\nfunction initSaveSettings(el: any) {\r\n    for (let i = 1; i <= 3; i++) {\r\n        const settingName = `setting${i}`\r\n        // For checkboxes\r\n        const checkbox = el.querySelector(`#${settingName}-checkbox`) as HTMLInputElement\r\n        if (checkbox) {\r\n            const storedData = localStorage.getItem(program.NAME + '_' + settingName + '_checkbox')\r\n            checkbox.checked = storedData === 'true'\r\n\r\n            checkbox.addEventListener(\"change\", () => {\r\n                const storedData = localStorage.getItem(program.NAME + '_' + settingName + '_checkbox')\r\n                const checked = String(checkbox.checked)\r\n\r\n                // Save merged settings to LocalStorage\r\n                localStorage.setItem(program.NAME + '_' + settingName + '_checkbox', checked)\r\n            })\r\n        }\r\n\r\n        // For input text\r\n        const inputText = el.querySelector(`#${settingName}-input`) as HTMLInputElement\r\n        if (inputText) {\r\n            const storedData = localStorage.getItem(program.NAME + '_' + settingName + '_input')\r\n            inputText.value = storedData || \"{Username}__{Year}-{Month}-{Day}--{Hour}-{Minute}\"\r\n\r\n            const saveFilenameFormat = el.querySelector(\"#saveFilenameFormat\")\r\n            saveFilenameFormat.addEventListener(\"click\", (event: { preventDefault: () => void }) => {\r\n                event.preventDefault()\r\n\r\n                const storedData = localStorage.getItem(program.NAME + '_' + settingName + '_input')\r\n                const input = String(inputText.value)\r\n\r\n                // Save merged settings to LocalStorage\r\n                localStorage.setItem(program.NAME + '_' + settingName + '_input', input)\r\n\r\n                saveFilenameFormat.textContent = localize(\"index@saved\")\r\n                saveFilenameFormat.style.color = \"white\"\r\n                saveFilenameFormat.style.backgroundColor = \"green\"\r\n                setTimeout(() => {\r\n                    saveFilenameFormat.textContent = localize(\"index@save\")\r\n                    saveFilenameFormat.style.color = \"black\"\r\n                    saveFilenameFormat.style.backgroundColor = \"buttonface\"\r\n                }, 1000)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nasync function handleProfilePage() {\r\n    try {\r\n        let userInfo: any | null = null\r\n        let userId: any | null = null\r\n\r\n        const regex = /instagram.com\\/([A-Za-z0-9_.]+)/\r\n        const match = window.location.href.match(regex)\r\n        if (match) {\r\n            const username = match[1]\r\n\r\n            userInfo = await getUserInfoFromWebProfileApi(username)\r\n            userId = userInfo.data.user.id\r\n        } else {\r\n            console.log(\"Could not get the username from insta url.\")\r\n        }\r\n\r\n        userInfo = await getUserFromInfoApi(userId)\r\n        if (userInfo) {\r\n            let openInNewTab = false\r\n            const storedSetting3Checkbox = localStorage.getItem(program.NAME + \"_setting3_checkbox\") || \"false\"\r\n            if (storedSetting3Checkbox !== null && storedSetting3Checkbox !== undefined) {\r\n                openInNewTab = storedSetting3Checkbox === \"true\"\r\n            }\r\n\r\n            const url = userInfo.user.hd_profile_pic_url_info.url\r\n            const username = userInfo.user.username\r\n\r\n            let modalBody = \"\"\r\n            modalBody += `<div class=\"slide\"><img src=\"${url}\" />`\r\n            // Add download button\r\n            if (openInNewTab) {\r\n                modalBody += `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${url}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n            } else {\r\n                modalBody += `<a href=\"https://instantgram.1337.pictures/download.php?data=${btoa(url)}:${btoa(username + \".jpg\")}\" style=\"width:inherit;font-size:20px;font-weight:600;margin-top:-4px;\" class=\"${program.NAME}-modal-db\">${localize(\"index@download\")}</a>`\r\n            }\r\n\r\n            modalBody += `</div>`\r\n\r\n            program.foundMediaObj = {\r\n                found: true,\r\n                mediaType: MediaType.Image,\r\n                mediaInfo: undefined,\r\n                modalBody: modalBody,\r\n                selectedSliderIndex: undefined,\r\n                userName: username\r\n            }\r\n            handleMediaFound(document, username)\r\n        } else {\r\n            console.log(\"Failed to fetch user information\")\r\n        }\r\n    } catch (e: any) {\r\n        console.log(`Some error in handleProfilePage: ${e}\\n${e.stack}`)\r\n        return null\r\n    }\r\n}\r\n\r\nfunction handleMediaNotFound() {\r\n    if (!program.foundByModule) {\r\n        new Modal({\r\n            heading: [\r\n                `<h5>\r\n            <span class=\"header-text-left\">[${program.NAME}]</span>\r\n            <span class=\"header-text-right\" style=\"margin-right: 0\">v${program.VERSION}</span>\r\n          </h5>`\r\n            ],\r\n            body: [localize(\"index@alert_dontFound\")],\r\n            bodyStyle: \"text-align:center\",\r\n            buttonList: [{ active: true, text: \"Ok\" }]\r\n        }).open()\r\n    }\r\n}\r\n\r\nfunction handleMediaFound(document: any, userName: any) {\r\n    new Modal({\r\n        heading: [\r\n            `<h5>\r\n          <span class=\"header-text-middle\">@${userName}\r\n            <button class=\"${program.NAME}-settings\">\r\n              <svg style=\"margin-left: auto; margin-right: auto;\" aria-label=\"Optionen\" class=\"x1lliihq x1n2onr6\" color=\"rgb(255, 255, 255)\" fill=\"rgb(255, 255, 255)\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\">\r\n                <title>Optionen</title>\r\n                <circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"8.635\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></circle>\r\n                <path d=\"M14.232 3.656a1.269 1.269 0 0 1-.796-.66L12.93 2h-1.86l-.505.996a1.269 1.269 0 0 1-.796.66m-.001 16.688a1.269 1.269 0 0 1 .796.66l.505.996h1.862l.505-.996a1.269 1.269 0 0 1 .796-.66M3.656 9.768a1.269 1.269 0 0 1-.66.796L2 11.07v1.862l.996.505a1.269 1.269 0 0 1 .66.796m16.688-.001a1.269 1.269 0 0 1 .66-.796L22 12.93v-1.86l-.996-.505a1.269 1.269 0 0 1-.66-.796M7.678 4.522a1.269 1.269 0 0 1-1.03.096l-1.06-.348L4.27 5.587l.348 1.062a1.269 1.269 0 0 1-.096 1.03m11.8 11.799a1.269 1.269 0 0 1 1.03-.096l1.06.348 1.318-1.317-.348-1.062a1.269 1.269 0 0 1 .096-1.03m-14.956.001a1.269 1.269 0 0 1 .096 1.03l-.348 1.06 1.317 1.318 1.062-.348a1.269 1.269 0 0 1 1.03.096m11.799-11.8a1.269 1.269 0 0 1-.096-1.03l.348-1.06-1.317-1.318-1.062.348a1.269 1.269 0 0 1-1.03-.096\" fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"2\"></path>\r\n              </svg>\r\n            </button>\r\n          </span>\r\n        </h5>`\r\n        ],\r\n        body: [program.foundMediaObj.modalBody],\r\n        bodyStyle: \"padding:0!important;text-align:center\",\r\n        buttonList: [{ active: true, text: localize(\"index@close\") }],\r\n        callback: (_modal, el) => {\r\n            if (el.querySelector(\".slider\") !== null) {\r\n                const slider = (<any>el).querySelector(\".slider\")\r\n                const slides = el.querySelectorAll(\".slide\")\r\n                const sliderControls = el.querySelector(\".slider-controls\")\r\n                let sliderIndex = program.foundMediaObj.selectedSliderIndex\r\n                console.log(sliderIndex);\r\n                \r\n\r\n                for (let i = 0; i < slides.length; i++) {\r\n                    const button = document.createElement(\"button\")\r\n                    button.setAttribute(\"data-index\", String(i))\r\n                    button.innerHTML = String(i + 1)\r\n                    button.addEventListener(\"click\", () => {\r\n                        sliderIndex = i\r\n                        updateSliderPosition()\r\n                    })\r\n                    sliderControls.appendChild(button)\r\n                }\r\n\r\n                const buttons = el.querySelectorAll(\".slider-controls button\")\r\n\r\n                function updateSliderPosition() {\r\n                    const slideWidth = slides[0].clientWidth\r\n                    const translateX = -slideWidth * sliderIndex\r\n                    slider.style.transform = `translateX(${translateX}px)`\r\n                    buttons.forEach((button, index) => {\r\n                        button.classList.toggle(\"active\", index === sliderIndex)\r\n                    })\r\n                }\r\n\r\n                buttons[sliderIndex].classList.add(\"active\")\r\n                updateSliderPosition()\r\n            }\r\n\r\n            el.querySelector(`.${program.NAME}-settings`).addEventListener(\"click\", () => {\r\n                new Modal({\r\n                    heading: [\r\n                        `<h5>\r\n                <span class=\"header-text-left\">[${program.NAME}]</span>\r\n                <span class=\"header-text-middle\">${localize(\"index#program#modal_settings@title\")}</span>\r\n                <span class=\"header-text-right\" style=\"margin-right: 0\">v${program.VERSION}</span>\r\n              </h5>`\r\n                    ],\r\n                    body: [\r\n                        `<form style=\"padding-top: 25px;padding-bottom: 25px;padding-left: 20px;padding-right: 20px;\">\r\n                <div class=\"container\">\r\n                  <div class=\"row mb-20\"><strong>${localize(\"index#program#modal_settings@settings_attention\")}</strong></div>\r\n                  <div class=\"row\">\r\n                    <div class=\"left\"><strong>${localize(\"index#program#modal_settings@settings_1\")}:</strong></div>\r\n                    <div class=\"right\">\r\n                      <label class=\"slideon\">\r\n                        <input type=\"checkbox\" id=\"setting1-checkbox\">\r\n                        <span class=\"slideon-slider\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"left\"><strong>${localize(\"index#program#modal_settings@settings_2\")}:</strong></div>\r\n                    <div class=\"right\">\r\n                      <label class=\"slideon\">\r\n                        <input type=\"checkbox\" id=\"setting2-checkbox\">\r\n                        <span class=\"slideon-slider\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"left\"><strong>${localize(\"index#program#modal_settings@settings_3\")}:</strong></div>\r\n                    <div class=\"right\">\r\n                      <label class=\"slideon\">\r\n                        <input type=\"checkbox\" id=\"setting3-checkbox\">\r\n                        <span class=\"slideon-slider\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">&nbsp;</div>\r\n                  <div class=\"row\">\r\n                    <div class=\"left\" style=\"text-align: left\">\r\n                      <strong>${localize(\"index#program#modal_settings@settings_4\")}</strong><br>\r\n                      {Username}__{Year}-{Month}-{Day}--{Hour}-{Minute}<br><br>\r\n                      <strong>${localize(\"index#program#modal_settings@settings_4_1\")}</strong>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"left\" style=\"display: contents\">\r\n                      <input type=\"text\" id=\"setting1-input\" value=\"{Username}__{Year}-{Month}-{Day}--{Hour}-{Minute}\">\r\n                      <button type=\"button\" id=\"saveFilenameFormat\">${localize(\"index@save\")}</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>`\r\n                    ],\r\n                    bodyStyle: \"padding:0!important;text-align:center\",\r\n                    buttonList: [{ active: true, text: localize(\"index@close\") }],\r\n                    callback: (_modal, el) => {\r\n                        initSaveSettings(el)\r\n                    }\r\n                }).open()\r\n            })\r\n            el.querySelector(\".\" + program.NAME + \"-modal-footer > .\" + program.NAME + \"-modal-button\").addEventListener(\"click\", () => {\r\n                // Remove previous executed bookmarklet stuff\r\n                const idsToRemove = [\r\n                    program.NAME + '-cssGeneral',\r\n                    program.NAME + '-cssSlideOn',\r\n                    program.NAME + '-cssCarouselSlider'\r\n                ]\r\n                // Call the function to remove <style> tags from the entire DOM\r\n                removeStyleTagsWithIDs(idsToRemove)\r\n            })\r\n        }\r\n    }).open()\r\n}\r\n\r\nfunction handleInstagramSite() {\r\n    new MediaScanner().execute(program, (scannerProgram: Program) => {\r\n        if (process.env.DEV) {\r\n            console.log(\"scannerFound\", scannerProgram.foundMediaObj.found)\r\n            console.log(\"foundByModule\", scannerProgram.foundByModule)\r\n        }\r\n\r\n        if (scannerProgram.foundMediaObj.found) {\r\n            handleMediaFound(document, scannerProgram.foundMediaObj.userName)\r\n        } else {\r\n            if (scannerProgram.foundMediaObj.mediaType == MediaType.Ad) {\r\n                return\r\n            }\r\n\r\n            if (scannerProgram.regexProfilePath.test(scannerProgram.path)) {\r\n                handleProfilePage()\r\n            } else {\r\n                handleMediaNotFound()\r\n            }\r\n        }\r\n    })\r\n\r\n    if (!process.env.DEV) {\r\n        update(program.VERSION)\r\n    }\r\n}\r\n\r\nfunction handleNonInstagramSite() {\r\n    new Modal({\r\n        heading: [\r\n            `<h5>\r\n          <span class=\"header-text-left\">[${program.NAME}]</span>\r\n          <span class=\"header-text-right\" style=\"margin-right: 0\">v${program.VERSION}</span>\r\n        </h5>`\r\n        ],\r\n        body: [localize(\"index@alert_onlyWorks\")],\r\n        bodyStyle: \"text-align:center\",\r\n        buttonList: [{ active: true, text: \"Ok\" }]\r\n    }).open()\r\n}\r\n\r\n/* ===============================\r\n =            Program            =\r\n ===============================*/\r\n// verify if are running on instagram site\r\nif (program.hostname === \"instagram.com\" || program.hostname === \"www.instagram.com\") {\r\n    handleInstagramSite()\r\n} else {\r\n    handleNonInstagramSite()\r\n}\r\n/* =====  End of Program  ======*/"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","MediaType","shortLang","navigator","language","indexOf","split","LANG_DEFAULT","localize","str","lang","localization","langs","e","console","error","program","NAME","info","replace","mediaInfoCache","Map","mediaIdCache","findAppId","appIdPattern","bodyScripts","document","querySelectorAll","i","length","match","text","getImgOrVedioUrl","item","video_versions","url","image_versions2","candidates","getVideoSrc","async","articleNode","videoElem","getAttribute","hasAttribute","includes","poster","timeNodes","posterUrl","parentNode","href","posterMatch","postFileName","resp","fetch","content","pattern","RegExp","videoUrl","JSON","parse","setAttribute","fetchVideoURL","generateModalBody","el","found","mediaType","UNDEFINED","mediaInfo","getMediaFromInfoApi","userName","modalBody","selectedSliderIndex","user","username","log","storedSetting1Checkbox","localStorage","getItem","product_type","Ad","mediaPostedAtDateObj","Date","taken_at","formattedFilename","storedSetting1Input","filename","placeholders","placeholder","regex","userFilenameFormatter","Minute","getMinutes","toString","padStart","Hour","getHours","Day","getDate","Month","getMonth","Year","getFullYear","Username","openInNewTab","storedSetting3Checkbox","Carousel","dotsList","window","location","pathname","startsWith","findIndex","classList","sC","carousel_media","scMedia","video_dash_manifest","querySelector","btoa","Number","imgElem","Video","Image","getElementInViewPercentage","viewport","undefined","top","pageYOffset","bottom","innerHeight","documentElement","elementBoundingRect","getBoundingClientRect","elementPos","y","height","elementHeight","elementHeightInView","percentageInView","Math","round","appId","postId","postIdPattern","aNodes","link","findPostId","mediaId","mediaIdPattern","has","postUrl","idMatch","set","findMediaId","method","headers","Accept","credentials","mode","status","respJson","json","items","stack","getUserFromInfoApi","userId","getUserInfoFromWebProfileApi","removeStyleTagsWithIDs","idsToRemove","forEach","styleTag","id","removeChild","FeedScanner","getName","execute","callback","$articles","$article","getElementsByTagName","mediaElInfos","i1","mediaEl","elemVisiblePercentage","push","reduce","max","current","v","foundMediaObj","this","PostReelScanner","VERSION","ReelsScanner","getPostId","Array","from","filter","element","children","StoriesScanner","pausePlayCurrentStory","svgElement","click","clickEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","$container","childElementCount","stories","childNodes","transformStyle","style","transform","pauseSettings","story","MediaScanner","iModal","animation","setTimeout","generalStyle","createElement","innerHTML","body","appendChild","switchStyle","carouselSliderStyle","regexProfilePath","test","path","regexStoriesURI","scannerProgram","foundByModule","regexRootPath","regexReelsURI","regexPostPath","regexReelURI","Modal","modalOptions","modal","imageURL","heading","headingStyle","bodyStyle","buttonList","getElementById","head","createModal","modalElement","add","modalContent","modalHeader","a","b","createDocumentFragment","firstChild","modalTitle","imageWrapper","image","margin","paddingBottom","modalText","innerText","modalFooter","button","modalButton","active","onclick","close","bind","open","ms","remove","Promise","resolve","refresh","__spreadArray","to","pack","arguments","ar","l","slice","concat","BrowserInfo","name","version","os","type","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","matchUserAgent","ua","matched","_a","browser","uaMatch","exec","parseUserAgent","matchedRule","versionParts","join","count","output","ii","createVersionParts","detectOS","searchBotMatch","informOutdatedVersionInDevConsole","data","warn","onlineVersion","localVersion","_data","setItem","stringify","lastVerification","dateExpiration","now","determineIfGetUpdateIsNecessary","response","changelogSplitted","edge_owner_to_timeline_media","edges","node","edge_media_to_caption","changelogNewReleaseDate","sentences","ul","sentence","trim","limitDate","setTime","getTime","valueOf","clear","userAgent","product","hostname","regexHostname","handleMediaFound","_modal","slider","slides","sliderControls","sliderIndex","String","addEventListener","updateSliderPosition","buttons","translateX","clientWidth","index","toggle","settingName","checkbox","storedData","checked","inputText","value","saveFilenameFormat","event","preventDefault","input","textContent","color","backgroundColor","initSaveSettings","userInfo","hd_profile_pic_url_info","handleProfilePage"],"sourceRoot":""}